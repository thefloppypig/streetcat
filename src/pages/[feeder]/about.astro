---
import { linkMeowCamera, linkWiki, feederRootProd } from "../../Const";
import CatMasonry from "../../components/CatMasonry";
import FeederLiveMeowApi from "../../components/FeederLiveMeowApi";
import Layout from "../../layouts/Layout.astro";
import {
    getFeederCatList,
    getFeederData,
    getFeederList,
    getFeederSavedApiData,
} from "../../utils/readFiles";

export async function getStaticPaths() {
    const feederList = await getFeederList();
    return feederList.map((feeder) => {
        return { params: { feeder: feeder.__feeder } };
    });
}

interface Props {
    feeder: string;
}

const { feeder } = Astro.params;
const feederData = await getFeederData(feeder);
const catDataList = await getFeederCatList(feeder);
const apiData = await getFeederSavedApiData(feeder);

const { name, aka, id } = feederData;

const images = apiData.images.map(
    (name) => `${feederRootProd}/${feeder}/.about/${name}`,
);
---

<Layout>
    <h1>About {name}</h1>
    <small class="aka">
        Also known as {feederData.aka}
    </small>
    <br />
    <br />
    {
        apiData && (
            <>
                <div>Chinese name: {apiData.chineseName}</div>
                <div>
                    {apiData.hasSnacks
                        ? `${name} provides both kibble and chicken snacks to it's visitors.`
                        : `${name} only provides kibble. Chicken snacks are not available in this feeder.`}
                </div>
            </>
        )
    }
    Find more information at <a
        class="a"
        href={`${linkWiki}/${feederData.wiki}`}>{feederData.name} Wiki page</a
    >
    <br />
    Watch {feederData.name} on <a
        class="a"
        href={`${linkMeowCamera}/${feederData.id}`}>meow.camera</a
    >

    <h2>Live Data</h2>
    <small>Powered by meow.camera api</small>
    <FeederLiveMeowApi client:only="react" id={id} />

    <h2>Feeder Images</h2>
    <CatMasonry
        columnsCountBreakPoints={{ 300: 2, 500: 3, 750: 4 }}
        client:only="react"
        srcList={images}
        altText={`Image of ${feederData.name}`}
    />
</Layout>
